import tree_sitter
from tree_sitter import Language, Parser
from utils.setting import logger
import os

class ASTParser():
    """ Generate corresponding parser for specific language.

    attributes:
        language -- programming language waiting for parsing
        lib_path -- file path of `my-language.so`
    """
    
    def __init__(self, language: str = None, lib_path: str = None) -> None:
        """ Binding tree-sitter library with python
        """
        self.language = language
        self.lib_path = lib_path
        if self.language == None:
            logger.debug('Cannot find language configuration, adapting java as default language.')
            self.language = 'java'
        if self.lib_path == None:
            logger.debug('Cannot find Language Library, adapting `my-language.so` generated by run `ts_build` as default.')
            path = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
            self.lib_path = path + '/ts_build/libs/my-languages.so'
        self.parser = Parser()
        self.parser.set_language(Language(self.lib_path, self.language))
    
    def parse(self, src_code: bytes = None) -> tree_sitter.Tree:
        return self.parser.parse(src_code)
      